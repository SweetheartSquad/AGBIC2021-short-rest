/**
format:
[level]: (scene) => {
	return [{
		icon: 'map icon image',
		obstacles: [
			'obstacle name', // see obstacles.txt for list
			{
				// unique hard-coded obstacle; see obstacles.txt for format
			}
		]
	}]
}
*/
(() => ({
	0: (scene) => {
		scene.log('bwahaha welcome to the dungeon');
		scene.delay(1000).then(() => {
			scene.log(
				'this is like a cutscene but you can ignore it and keep moving'
			);
		});
		const areas = [
			{
				icon: 'icon_camp',
			},
		];
		// TODO: real level generation
		areas.push(
			{
				icon: 'icon_enemy',
				obstacles: ['bat'],
			},
			{
				icon: 'icon_enemy',
				obstacles: ['rat_small'],
			},
			{
				icon: 'icon_enemy',
				obstacles: ['rat_king', 'rat_king', 'rat_king'],
			},
			{
				icon: 'icon_enemy',
				obstacles: ['skeleton'],
			},
			{
				icon: 'icon_enemy',
				obstacles: ['skeleton_armoured'],
			},
			{
				icon: 'icon_enemy',
				obstacles: ['zombie'],
			},
			{
				icon: 'icon_enemy',
				obstacles: ['bomb'],
			},
			{
				icon: 'icon_unknown',
				obstacles: ['fountain_healing'],
			},
			{
				icon: 'icon_unknown',
				obstacles: ['fountain_poison'],
			},
			{
				icon: 'icon_unknown',
				obstacles: ['trap'],
			},
			{
				icon: 'icon_enemy',
				obstacles: ['slime_big'],
			},
			{
				icon: 'icon_enemy',
				obstacles: ['dragon'],
			}
		);
		areas.push({
			icon: 'icon_enemy',
			obstacles: [
				{
					sprite: 'treasure',
					health: 1,
					start() {
						scene.log('Test log');
					},
					interact() {
						scene.log(
							'A really long log to test the text wrapping and automatic shifting of different log lines'
						);
						scene.log('Another log right after');
					},
				},
				'treasure',
			],
		});
		areas.push({
			icon: 'icon_door',
			obstacles: ['door'],
		});
		return areas;
	},
	1: (scene) => {
		scene.setBg('bg2');
		const areas = [
			{
				icon: 'icon_camp',
			},
		];
		areas.push({
			icon: 'icon_door',
			obstacles: ['door'],
		});
		return areas;
	},
	2: (scene) => {
		const areas = [
			{
				icon: 'icon_camp',
			},
		];
		// TODO: endgame
		return areas;
	},
}))();
